{"data":{"site":{"siteMetadata":{"title":"TunedReality","author":"Vinay"}},"markdownRemark":{"id":"9114ca58-7a37-5e66-a744-7be01e78973a","excerpt":"Those who watch Attack On Titan pays keen attention to ‘Current publicly available information’, although these information is mentioned in conversation through…","html":"<p>Those who watch Attack On Titan pays keen attention to ‘Current publicly available information’, although these information is mentioned in conversation through out the episodes there is more to learn with graphical representation. I found this website which has made it available.</p>\n<p><img src=\"https://vinkrish-notes.s3-us-west-2.amazonaws.com/img/aot_1.png\" alt=\"aot_1\"></p>\n<p>I love to keep my own copy and another problem with above website is that text is next to thumnail of image which is small.</p>\n<p><img src=\"https://vinkrish-notes.s3-us-west-2.amazonaws.com/img/aot_2.png\" alt=\"aot_2\"></p>\n<p>If I click on image i’ll lose the text, so I did some <strong>web scraping</strong> and use <strong>OpenCV</strong> to modify image programatically to include English text at the bottom of the image.</p>\n<p>let’s look at the steps involved:</p>\n<ol>\n<li>Using <strong>BeautifulSoup</strong> to scrape the webpages. By inspecting the page, I realised the images have <code class=\"language-text\">href</code> attribute and also to remove other unwanted links I have put condition based on length which in our case satisfy the image links.</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> bs4 <span class=\"token keyword\">import</span> BeautifulSoup\n<span class=\"token keyword\">from</span> urllib<span class=\"token punctuation\">.</span>request <span class=\"token keyword\">import</span> urlopen\n<span class=\"token keyword\">import</span> re\n\nlinks <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'https://attackontitan.fandom.com/wiki/Current_Publicly_Available_Information/Anime'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'https://attackontitan.fandom.com/wiki/Current_Publicly_Available_Information/Anime/Season_2'</span><span class=\"token punctuation\">,</span> \n    <span class=\"token string\">'https://attackontitan.fandom.com/wiki/Current_Publicly_Available_Information/Anime/Season_3'</span><span class=\"token punctuation\">,</span> \n    <span class=\"token string\">'https://attackontitan.fandom.com/wiki/Current_Publicly_Available_Information/Anime/OVA'</span><span class=\"token punctuation\">]</span>\n\nhref_lines <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    html_page <span class=\"token operator\">=</span> urlopen<span class=\"token punctuation\">(</span>links<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    soup <span class=\"token operator\">=</span> BeautifulSoup<span class=\"token punctuation\">(</span>html_page<span class=\"token punctuation\">,</span> <span class=\"token string\">'lxml'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> link <span class=\"token keyword\">in</span> soup<span class=\"token punctuation\">.</span>findAll<span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> link<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'href'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">is</span> <span class=\"token operator\">not</span> <span class=\"token boolean\">None</span> <span class=\"token operator\">and</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>link<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'href'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">109</span> <span class=\"token operator\">and</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>link<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'href'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">115</span> <span class=\"token punctuation\">:</span>\n            href_lines<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>link<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'href'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            \n<span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'extracted-img-links.txt'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'w'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token builtin\">file</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">for</span> line <span class=\"token keyword\">in</span> href_lines<span class=\"token punctuation\">:</span>\n        <span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>line<span class=\"token operator\">+</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>The image links are saved to a file.</p>\n<ol start=\"2\">\n<li>Now we can download those images one by one using <code class=\"language-text\">urllib.request</code> to open URL and save the images on computer.</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> urllib<span class=\"token punctuation\">.</span>request\n<span class=\"token keyword\">import</span> os\n\nimg_count <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n\nfile_list <span class=\"token operator\">=</span> <span class=\"token string\">\"C:/Users/Vinay/Pictures/AOT/{0}.png\"</span>\n\n<span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"extracted-img-links.txt\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">for</span> image <span class=\"token keyword\">in</span> f<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n            urllib<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">.</span>urlretrieve<span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> file_list<span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>img_count<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            img_count <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n        <span class=\"token keyword\">except</span> IOError<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>image <span class=\"token operator\">+</span> <span class=\"token string\">\" does not exist\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Now we have original images saved.</p>\n<ol start=\"3\">\n<li>Next step is to download all the respective text for the image which was beside the thumnail in website. Below code fetches all paragraph inside a table we are interested in. OpenCV doesn’t have method that supports text with quotes so we have to explicitly remove them before saving to file.</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> bs4 <span class=\"token keyword\">import</span> BeautifulSoup<span class=\"token punctuation\">,</span> NavigableString\n<span class=\"token keyword\">from</span> urllib<span class=\"token punctuation\">.</span>request <span class=\"token keyword\">import</span> urlopen\n<span class=\"token keyword\">import</span> re\n\nlinks <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'https://attackontitan.fandom.com/wiki/Current_Publicly_Available_Information/Anime'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'https://attackontitan.fandom.com/wiki/Current_Publicly_Available_Information/Anime/Season_2'</span><span class=\"token punctuation\">,</span> \n    <span class=\"token string\">'https://attackontitan.fandom.com/wiki/Current_Publicly_Available_Information/Anime/Season_3'</span><span class=\"token punctuation\">,</span> \n    <span class=\"token string\">'https://attackontitan.fandom.com/wiki/Current_Publicly_Available_Information/Anime/OVA'</span><span class=\"token punctuation\">]</span>\n\nparas <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    html_page <span class=\"token operator\">=</span> urlopen<span class=\"token punctuation\">(</span>links<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    soup <span class=\"token operator\">=</span> BeautifulSoup<span class=\"token punctuation\">(</span>html_page<span class=\"token punctuation\">,</span> <span class=\"token string\">'lxml'</span><span class=\"token punctuation\">)</span>\n    tables <span class=\"token operator\">=</span> soup<span class=\"token punctuation\">.</span>findChildren<span class=\"token punctuation\">(</span><span class=\"token string\">'table'</span><span class=\"token punctuation\">)</span>\n    my_table <span class=\"token operator\">=</span> tables<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n    rows <span class=\"token operator\">=</span> my_table<span class=\"token punctuation\">.</span>findChildren<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'th'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'tr'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">for</span> row <span class=\"token keyword\">in</span> rows<span class=\"token punctuation\">:</span>\n        cells <span class=\"token operator\">=</span> row<span class=\"token punctuation\">.</span>findChildren<span class=\"token punctuation\">(</span><span class=\"token string\">'td'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">for</span> cell <span class=\"token keyword\">in</span> cells<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">for</span> p <span class=\"token keyword\">in</span> cell<span class=\"token punctuation\">.</span>findAll<span class=\"token punctuation\">(</span><span class=\"token string\">'p'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                <span class=\"token builtin\">str</span> <span class=\"token operator\">=</span> p<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">\"'\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span>\n                paras<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">'\"'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                \n<span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'extracted-p.txt'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'w'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token builtin\">file</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">for</span> line <span class=\"token keyword\">in</span> paras<span class=\"token punctuation\">:</span>\n        <span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>line<span class=\"token operator\">+</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ol start=\"4\">\n<li>I wanted to automate whole process but due to non-uniform order of text, we need manual intervention to verify if there are images which have desciption in other than &#x3C;‘p’>. I found out one case where instead of paragraph, list was used - so I just added text in respective line so that our images are named as index on which description is saved.</li>\n</ol>\n<p>Now we can clean up extracted paragraph by removing empty lines.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">isLineEmpty</span><span class=\"token punctuation\">(</span>line<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>line<span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span>\n\n<span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'extracted-para.txt'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token builtin\">file</span><span class=\"token punctuation\">:</span>\n    info <span class=\"token operator\">=</span> <span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>readlines<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    \n<span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'extracted.txt'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'w'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token builtin\">file</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">for</span> line <span class=\"token keyword\">in</span> info<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> <span class=\"token operator\">not</span> isLineEmpty<span class=\"token punctuation\">(</span>line<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>line<span class=\"token punctuation\">)</span></code></pre></div>\n<ol start=\"5\">\n<li>Final step is to use OpenCV to add border and wrtie text on it.</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> sys\n<span class=\"token keyword\">import</span> cv2 <span class=\"token keyword\">as</span> cv\n   \nbottom <span class=\"token operator\">=</span> <span class=\"token number\">100</span>\n\nborderType <span class=\"token operator\">=</span> cv<span class=\"token punctuation\">.</span>BORDER_CONSTANT\n\nfont <span class=\"token operator\">=</span> cv<span class=\"token punctuation\">.</span>FONT_HERSHEY_SIMPLEX\n\n<span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'extracted.txt'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token builtin\">file</span><span class=\"token punctuation\">:</span>\n    info <span class=\"token operator\">=</span> <span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>readlines<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">85</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    \n    src <span class=\"token operator\">=</span> cv<span class=\"token punctuation\">.</span>imread<span class=\"token punctuation\">(</span><span class=\"token string\">'C:/Users/Vinay/Pictures/AOT/{0}.png'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> cv<span class=\"token punctuation\">.</span>IMREAD_COLOR<span class=\"token punctuation\">)</span>\n\n    dst <span class=\"token operator\">=</span> cv<span class=\"token punctuation\">.</span>copyMakeBorder<span class=\"token punctuation\">(</span>src<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> bottom<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> borderType<span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n    \n    text <span class=\"token operator\">=</span> info<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    \n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">300</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        cv<span class=\"token punctuation\">.</span>putText<span class=\"token punctuation\">(</span>dst<span class=\"token punctuation\">,</span>text<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span><span class=\"token number\">150</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> dst<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">-</span><span class=\"token number\">75</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> font<span class=\"token punctuation\">,</span> <span class=\"token number\">0.75</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> cv<span class=\"token punctuation\">.</span>LINE_AA<span class=\"token punctuation\">)</span>\n        cv<span class=\"token punctuation\">.</span>putText<span class=\"token punctuation\">(</span>dst<span class=\"token punctuation\">,</span><span class=\"token string\">'-'</span><span class=\"token operator\">+</span>text<span class=\"token punctuation\">[</span><span class=\"token number\">150</span><span class=\"token punctuation\">:</span><span class=\"token number\">300</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> dst<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">-</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> font<span class=\"token punctuation\">,</span> <span class=\"token number\">0.75</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> cv<span class=\"token punctuation\">.</span>LINE_AA<span class=\"token punctuation\">)</span>\n        cv<span class=\"token punctuation\">.</span>putText<span class=\"token punctuation\">(</span>dst<span class=\"token punctuation\">,</span><span class=\"token string\">'-'</span><span class=\"token operator\">+</span>text<span class=\"token punctuation\">[</span><span class=\"token number\">300</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> dst<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">-</span><span class=\"token number\">25</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> font<span class=\"token punctuation\">,</span> <span class=\"token number\">0.75</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> cv<span class=\"token punctuation\">.</span>LINE_AA<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">elif</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">150</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        cv<span class=\"token punctuation\">.</span>putText<span class=\"token punctuation\">(</span>dst<span class=\"token punctuation\">,</span>text<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span><span class=\"token number\">150</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> dst<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">-</span><span class=\"token number\">64</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> font<span class=\"token punctuation\">,</span> <span class=\"token number\">0.75</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> cv<span class=\"token punctuation\">.</span>LINE_AA<span class=\"token punctuation\">)</span>\n        cv<span class=\"token punctuation\">.</span>putText<span class=\"token punctuation\">(</span>dst<span class=\"token punctuation\">,</span><span class=\"token string\">'-'</span> <span class=\"token operator\">+</span> text<span class=\"token punctuation\">[</span><span class=\"token number\">150</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> dst<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">-</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> font<span class=\"token punctuation\">,</span> <span class=\"token number\">0.75</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> cv<span class=\"token punctuation\">.</span>LINE_AA<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        cv<span class=\"token punctuation\">.</span>putText<span class=\"token punctuation\">(</span>dst<span class=\"token punctuation\">,</span>text<span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> dst<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">-</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> font<span class=\"token punctuation\">,</span> <span class=\"token number\">0.75</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> cv<span class=\"token punctuation\">.</span>LINE_AA<span class=\"token punctuation\">)</span>\n\n    cv<span class=\"token punctuation\">.</span>imwrite<span class=\"token punctuation\">(</span><span class=\"token string\">'C:/Users/Vinay/Pictures/AOT/sub/{0}.png'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> dst<span class=\"token punctuation\">)</span></code></pre></div>\n<p>This is how it looks.</p>\n<p><img src=\"https://vinkrish-notes.s3-us-west-2.amazonaws.com/img/aot_3.png\" alt=\"aot_3\"></p>","frontmatter":{"title":"AOT - How I created a publicly available information in English","date":"June 01, 2019"}}},"pageContext":{"slug":"/markdown/aot/","previous":{"fields":{"slug":"/markdown/subtitle-text-extraction/"},"frontmatter":{"title":"Extract Text from Subtitle"}},"next":null}}