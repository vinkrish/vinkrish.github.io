{"version":3,"file":"component---src-templates-blog-list-js-10b8ee92ac19bfa7ec9e.js","mappings":"0MAuFA,UA/EkBA,IAAsC,IAArC,KAAEC,EAAI,YAAEC,EAAW,SAAEC,GAAUH,EAChD,MAAMI,EAAYH,EAAKI,KAAKC,aAAaC,MACnCC,EAAQP,EAAKQ,kBAAkBC,OAC/B,YAAEC,EAAW,SAAEC,GAAaV,EAC5BW,EAA0B,IAAhBF,EACVG,EAASH,IAAgBC,EACzBG,EAAWJ,EAAc,GAAM,EAAI,KAAOA,EAAc,GAAGK,WAC3DC,GAAYN,EAAc,GAAGK,WAEnC,OACEE,EAAAA,cAACC,EAAAA,EAAM,CAAChB,SAAUA,EAAUI,MAAOH,GACjCc,EAAAA,cAACE,EAAAA,EAAG,CACFb,MAAOH,EACPiB,SAAU,CAAC,OAAQ,WAAY,mBAEjCH,EAAAA,cAACI,EAAAA,EAAG,MACHd,EAAMe,IAAIC,IAAe,IAAd,KAAEC,GAAMD,EAClB,MAAMjB,EAAQkB,EAAKC,YAAYnB,OAASkB,EAAKE,OAAOC,KACpD,OACEV,EAAAA,cAAA,OAAKW,IAAKJ,EAAKE,OAAOC,MACpBV,EAAAA,cAAA,MACEY,MAAO,CACLC,cAAcC,EAAAA,EAAAA,IAAO,EAAI,KAG3Bd,EAAAA,cAACe,EAAAA,KAAI,CAACH,MAAO,CAAEI,UAAW,QAAUC,GAAIV,EAAKE,OAAOC,MACjDrB,IAGLW,EAAAA,cAAA,aAAQO,EAAKC,YAAYU,MACzBlB,EAAAA,cAAA,KAAGmB,wBAAyB,CAAEC,OAAQb,EAAKc,cAIjDrB,EAAAA,cAAA,MACEY,MAAO,CACLU,QAAS,OACTC,SAAU,OACVC,eAAgB,gBAChBC,WAAY,SACZC,UAAW,OACXC,QAAS,KAGThC,GACAK,EAAAA,cAACe,EAAAA,KAAI,CAACE,GAAI,UAAUpB,IAAY+B,IAAI,QAAO,mBAI5CC,MAAMC,KAAK,CAAEC,OAAQrC,GAAY,CAACsC,EAAGC,IACpCjC,EAAAA,cAAA,MACEW,IAAK,oBAAoBsB,EAAI,IAC7BrB,MAAO,CACLsB,OAAQ,IAGVlC,EAAAA,cAACe,EAAAA,KAAI,CACHE,GAAI,UAAgB,IAANgB,EAAU,IAAMA,EAAI,IAClCrB,MAAO,CACLe,SAASb,EAAAA,EAAAA,IAAO,EAAI,GACpBqB,eAAgB,OAChBC,MAAOH,EAAI,IAAMxC,EAAc,UAAY,GAC3C4C,WAAYJ,EAAI,IAAMxC,EAAc,UAAY,KAGjDwC,EAAI,MAITrC,GACAI,EAAAA,cAACe,EAAAA,KAAI,CAACE,GAAI,UAAUlB,IAAY6B,IAAI,QAAO,iB","sources":["webpack://vinkrish-personal-blog/./src/templates/blog-list.js"],"sourcesContent":["import React from 'react'\nimport { Link, graphql } from 'gatsby'\n\nimport SEO from '../components/seo'\nimport Bio from '../components/Bio'\nimport Layout from '../components/Layout'\nimport { rhythm } from '../utils/typography'\n\nconst BlogIndex = ({ data, pageContext, location }) => {\n  const siteTitle = data.site.siteMetadata.title\n  const posts = data.allMarkdownRemark.edges\n  const { currentPage, numPages } = pageContext\n  const isFirst = currentPage === 1\n  const isLast = currentPage === numPages\n  const prevPage = currentPage - 1 === 1 ? '1' : (currentPage - 1).toString()\n  const nextPage = (currentPage + 1).toString()\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO\n        title={siteTitle}\n        keywords={[`blog`, `vinkrish`, `Vinay Krishna`]}\n      />\n      <Bio />\n      {posts.map(({ node }) => {\n        const title = node.frontmatter.title || node.fields.slug\n        return (\n          <div key={node.fields.slug}>\n            <h3\n              style={{\n                marginBottom: rhythm(1 / 4),\n              }}\n            >\n              <Link style={{ boxShadow: 'none' }} to={node.fields.slug}>\n                {title}\n              </Link>\n            </h3>\n            <small>{node.frontmatter.date}</small>\n            <p dangerouslySetInnerHTML={{ __html: node.excerpt }} />\n          </div>\n        )\n      })}\n      <ul\n        style={{\n          display: 'flex',\n          flexWrap: 'wrap',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          listStyle: 'none',\n          padding: 0,\n        }}\n      >\n        {!isFirst && (\n          <Link to={`/blogs/${prevPage}`} rel=\"prev\">\n            ← Previous Page\n          </Link>\n        )}\n        {Array.from({ length: numPages }, (_, i) => (\n          <li\n            key={`pagination-number${i + 1}`}\n            style={{\n              margin: 0,\n            }}\n          >\n            <Link\n              to={`/blogs/${i === 0 ? '1' : i + 1}`}\n              style={{\n                padding: rhythm(1 / 4),\n                textDecoration: 'none',\n                color: i + 1 === currentPage ? '#ffffff' : '',\n                background: i + 1 === currentPage ? '#007acc' : '',\n              }}\n            >\n              {i + 1}\n            </Link>\n          </li>\n        ))}\n        {!isLast && (\n          <Link to={`/blogs/${nextPage}`} rel=\"next\">\n            Next Page →\n          </Link>\n        )}\n      </ul>\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query blogPageQuery($skip: Int!, $limit: Int!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"DD MMMM, YYYY\")\n            title\n          }\n        }\n      }\n    }\n  }\n`"],"names":["_ref","data","pageContext","location","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","currentPage","numPages","isFirst","isLast","prevPage","toString","nextPage","React","Layout","SEO","keywords","Bio","map","_ref2","node","frontmatter","fields","slug","key","style","marginBottom","rhythm","Link","boxShadow","to","date","dangerouslySetInnerHTML","__html","excerpt","display","flexWrap","justifyContent","alignItems","listStyle","padding","rel","Array","from","length","_","i","margin","textDecoration","color","background"],"sourceRoot":""}