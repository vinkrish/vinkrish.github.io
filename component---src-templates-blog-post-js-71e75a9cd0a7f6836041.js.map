{"version":3,"sources":["webpack:///./src/templates/blog-post.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/utils/typography.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/Layout.js","webpack:///./src/components/seo.js","webpack:///./src/components/Bio.js"],"names":["BlogPostTemplate","render","post","this","props","data","markdownRemark","siteTitle","site","siteMetadata","title","_this$props$pageConte","pageContext","previous","next","disqusConfig","identifier","id","frontmatter","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_components_Layout__WEBPACK_IMPORTED_MODULE_5__","location","_components_seo__WEBPACK_IMPORTED_MODULE_6__","description","excerpt","style","Object","assign","scale","display","marginBottom","rhythm","marginTop","date","dangerouslySetInnerHTML","__html","html","_components_Bio__WEBPACK_IMPORTED_MODULE_4__","flexWrap","justifyContent","listStyle","padding","gatsby__WEBPACK_IMPORTED_MODULE_3__","to","fields","slug","rel","disqus_react__WEBPACK_IMPORTED_MODULE_8__","shortname","config","React","Component","pageQuery","__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","createContext","Consumer","staticQueryData","query","children","Error","propTypes","PropTypes","object","string","isRequired","func","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1__","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1___default","Wordpress2016","overrideThemeStyles","a.gatsby-resp-image-link","boxShadow","googleFonts","typography","Typography","m","module","exports","require","default","ProdPageRenderer","_ref","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","json","shape","ListLink","react__WEBPACK_IMPORTED_MODULE_1___default","marginRight","gatsby__WEBPACK_IMPORTED_MODULE_2__","Layout","_this$props","header","textDecoration","color","fontFamily","float","marginLeft","maxWidth","Date","getFullYear","href","SEO","lang","meta","keywords","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","array","arrayOf","bioQuery","Bio","_data$site$siteMetada","social","gatsby_image__WEBPACK_IMPORTED_MODULE_4___default","fixed","avatar","childImageSharp","alt","minWidth","borderRadius","imgStyle","target","twitter","_public_static_d_4008041639_json__WEBPACK_IMPORTED_MODULE_1__"],"mappings":"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","file":"component---src-templates-blog-post-js-71e75a9cd0a7f6836041.js","sourcesContent":["import React from 'react'\r\nimport { Link, graphql } from 'gatsby'\r\n\r\nimport Bio from '../components/Bio'\r\nimport Layout from '../components/Layout'\r\nimport SEO from '../components/seo'\r\nimport { rhythm, scale } from '../utils/typography'\r\nimport { DiscussionEmbed } from 'disqus-react'\r\n\r\nclass BlogPostTemplate extends React.Component {\r\n  render() {\r\n    const post = this.props.data.markdownRemark\r\n    const siteTitle = this.props.data.site.siteMetadata.title\r\n    const { previous, next } = this.props.pageContext\r\n    const disqusShortname = \"vinkrish-info\"\r\n    const disqusConfig = {\r\n      identifier: post.id,\r\n      title: post.frontmatter.title\r\n    }\r\n\r\n    return (\r\n      <Layout location={this.props.location} title={siteTitle}>\r\n        <SEO title={post.frontmatter.title} description={post.excerpt} />\r\n        <h1>{post.frontmatter.title}</h1>\r\n        <p\r\n          style={{\r\n            ...scale(-1 / 5),\r\n            display: `block`,\r\n            marginBottom: rhythm(1),\r\n            marginTop: rhythm(-1),\r\n          }}\r\n        >\r\n          {post.frontmatter.date}\r\n        </p>\r\n        <div dangerouslySetInnerHTML={{ __html: post.html }} />\r\n        <hr\r\n          style={{\r\n            marginBottom: rhythm(1),\r\n          }}\r\n        />\r\n        <Bio />\r\n\r\n        <ul\r\n          style={{\r\n            display: `flex`,\r\n            flexWrap: `wrap`,\r\n            justifyContent: `space-between`,\r\n            listStyle: `none`,\r\n            padding: 0,\r\n          }}\r\n        >\r\n          <li>\r\n            {previous && (\r\n              <Link to={previous.fields.slug} rel=\"prev\">\r\n                ← {previous.frontmatter.title}\r\n              </Link>\r\n            )}\r\n          </li>\r\n          <li>\r\n            {next && (\r\n              <Link to={next.fields.slug} rel=\"next\">\r\n                {next.frontmatter.title} →\r\n              </Link>\r\n            )}\r\n          </li>\r\n        </ul>\r\n        <DiscussionEmbed shortname={disqusShortname} config={disqusConfig}/>\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n\r\nexport default BlogPostTemplate\r\n\r\nexport const pageQuery = graphql`\r\n  query BlogPostBySlug($slug: String!) {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        author\r\n      }\r\n    }\r\n    markdownRemark(fields: { slug: { eq: $slug } }) {\r\n      id\r\n      excerpt(pruneLength: 160)\r\n      html\r\n      frontmatter {\r\n        title\r\n        date(formatString: \"MMMM DD, YYYY\")\r\n      }\r\n    }\r\n  }\r\n`\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","import Typography from 'typography'\r\nimport Wordpress2016 from 'typography-theme-wordpress-2016'\r\n\r\nWordpress2016.overrideThemeStyles = () => {\r\n  return {\r\n    'a.gatsby-resp-image-link': {\r\n      boxShadow: `none`,\r\n    },\r\n  }\r\n}\r\n\r\ndelete Wordpress2016.googleFonts\r\n\r\nconst typography = new Typography(Wordpress2016)\r\n\r\n// Hot reload typography in development.\r\nif (process.env.NODE_ENV !== `production`) {\r\n  typography.injectStyles()\r\n}\r\n\r\nexport default typography\r\nexport const rhythm = typography.rhythm\r\nexport const scale = typography.scale\r\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\r\nimport { Link } from 'gatsby'\r\nimport { rhythm } from '../utils/typography'\r\n\r\nconst ListLink = props => (\r\n  <li style={{ display: `inline-block`, marginRight: `1rem` }}>\r\n    <Link to={props.to}>{props.children}</Link>\r\n  </li>\r\n)\r\n\r\nclass Layout extends React.Component {\r\n  render() {\r\n    const { location, title, children } = this.props\r\n    //const rootPath = `${__PATH_PREFIX__}/`\r\n    // if (location.pathname === rootPath)\r\n\r\n    let header = (\r\n      <div>\r\n        <Link\r\n          style={{\r\n            boxShadow: `none`,\r\n            textDecoration: `none`,\r\n            color: `inherit`,\r\n          }}\r\n          to={`/`}\r\n        >\r\n          <h2 \r\n            style={{\r\n              fontFamily: `Montserrat, sans-serif`,\r\n              display: `inline-block`,\r\n              marginTop: 0\r\n            }}\r\n          >\r\n            {title}\r\n          </h2>\r\n        </Link>\r\n        <ul style={{ listStyle: `none`, float: `right` }}>\r\n          <ListLink to=\"/\">Home</ListLink>\r\n          <ListLink to=\"/blogs/\">Blog</ListLink>\r\n        </ul>\r\n      </div>\r\n      )\r\n    return (\r\n      <div\r\n        style={{\r\n          marginLeft: `auto`,\r\n          marginRight: `auto`,\r\n          maxWidth: rhythm(24),\r\n          padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`,\r\n        }}\r\n      >\r\n        {header}\r\n        {children}\r\n        <footer>\r\n          © {new Date().getFullYear()}, Built with\r\n          {` `}\r\n          <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\r\n        </footer>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Layout\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Helmet from 'react-helmet'\r\nimport { StaticQuery, graphql } from 'gatsby'\r\n\r\nfunction SEO({ description, lang, meta, keywords, title }) {\r\n  return (\r\n    <StaticQuery\r\n      query={detailsQuery}\r\n      render={data => {\r\n        const metaDescription =\r\n          description || data.site.siteMetadata.description\r\n        return (\r\n          <Helmet\r\n            htmlAttributes={{\r\n              lang,\r\n            }}\r\n            title={title}\r\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\r\n            meta={[\r\n              {\r\n                name: `description`,\r\n                content: metaDescription,\r\n              },\r\n              {\r\n                property: `og:title`,\r\n                content: title,\r\n              },\r\n              {\r\n                property: `og:description`,\r\n                content: metaDescription,\r\n              },\r\n              {\r\n                property: `og:type`,\r\n                content: `website`,\r\n              },\r\n              {\r\n                name: `twitter:card`,\r\n                content: `summary`,\r\n              },\r\n              {\r\n                name: `twitter:creator`,\r\n                content: data.site.siteMetadata.author,\r\n              },\r\n              {\r\n                name: `twitter:title`,\r\n                content: title,\r\n              },\r\n              {\r\n                name: `twitter:description`,\r\n                content: metaDescription,\r\n              },\r\n            ]\r\n              .concat(\r\n                keywords.length > 0\r\n                  ? {\r\n                      name: `keywords`,\r\n                      content: keywords.join(`, `),\r\n                    }\r\n                  : []\r\n              )\r\n              .concat(meta)}\r\n          />\r\n        )\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  keywords: [],\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.array,\r\n  keywords: PropTypes.arrayOf(PropTypes.string),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n\r\nconst detailsQuery = graphql`\r\n  query DefaultSEOQuery {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        description\r\n        author\r\n      }\r\n    }\r\n  }\r\n`\r\n","import React from 'react'\r\nimport { StaticQuery, graphql } from 'gatsby'\r\nimport Image from 'gatsby-image'\r\n\r\nimport { rhythm } from '../utils/typography'\r\n\r\nfunction Bio() {\r\n  return (\r\n    <StaticQuery\r\n      query={bioQuery}\r\n      render={data => {\r\n        const { author, social } = data.site.siteMetadata\r\n        return (\r\n          <div\r\n            style={{\r\n              display: `flex`\r\n            }}\r\n          >\r\n            <Image\r\n              fixed={data.avatar.childImageSharp.fixed}\r\n              alt={author}\r\n              style={{\r\n                marginRight: rhythm(1 / 2),\r\n                marginBottom: 0,\r\n                minWidth: 50,\r\n                borderRadius: `100%`,\r\n              }}\r\n              imgStyle={{\r\n                borderRadius: `50%`,\r\n              }}\r\n            />\r\n            <p> \r\n              Hi, I'm <strong>{author}</strong> - Polyglot Coder. You can find me on\r\n              {` `}\r\n              <a href=\"https://github.com/vinkrish\" target=\"_blank\">\r\n                GitHub\r\n              </a>\r\n              {` `}\r\n              <a href=\"https://www.linkedin.com/in/vinay-krishna-07a1281a/\" target=\"_blank\">\r\n                LinkedIn\r\n              </a>\r\n              {` `}\r\n              <a href={`https://twitter.com/${social.twitter}`} target=\"_blank\">\r\n                Twitter\r\n              </a>\r\n              {` `}\r\n              <a href=\"https://www.youtube.com/user/vinaykrishna1989/playlists?view_as=subscriber\" target=\"_blank\">\r\n                YouTube\r\n              </a>\r\n            </p>\r\n          </div>\r\n        )\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\nconst bioQuery = graphql`\r\n  query BioQuery {\r\n    avatar: file(absolutePath: { regex: \"/vinkrish.jpeg/\" }) {\r\n      childImageSharp {\r\n        fixed(width: 50, height: 50) {\r\n          ...GatsbyImageSharpFixed\r\n        }\r\n      }\r\n    }\r\n    site {\r\n      siteMetadata {\r\n        author\r\n        social {\r\n          twitter\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default Bio\r\n"],"sourceRoot":""}