{"version":3,"file":"component---src-templates-blog-list-js-c0d1cebbdf905859ee79.js","mappings":"oNAM4C,IAEtCA,EAAS,SAAAC,GAAA,SAAAD,IAAA,OAAAC,EAAAC,MAAA,KAAAC,YAAA,KA+EZ,OA/EYC,EAAAA,EAAAA,GAAAJ,EAAAC,GAAAD,EAAAK,UACbC,OAAA,WACE,MAAM,KAAEC,GAASC,KAAKC,MAChBC,EAAYH,EAAKI,KAAKC,aAAaC,MACnCC,EAAQP,EAAKQ,kBAAkBC,OAC/B,YAAEC,EAAW,SAAEC,GAAaV,KAAKC,MAAMU,YACvCC,EAA0B,IAAhBH,EACVI,EAASJ,IAAgBC,EACzBI,EAAWL,EAAc,GAAM,EAAI,KAAOA,EAAc,GAAGM,WAC3DC,GAAYP,EAAc,GAAGM,WAEnC,OACEE,EAAAA,cAACC,EAAAA,EAAM,CAACC,SAAUnB,KAAKC,MAAMkB,SAAUd,MAAOH,GAC5Ce,EAAAA,cAACG,EAAAA,EAAG,CACFf,MAAOH,EACPmB,SAAU,CAAC,OAAQ,WAAY,mBAEjCJ,EAAAA,cAACK,EAAAA,EAAG,MACHhB,EAAMiB,IAAIC,IAAe,IAAd,KAAEC,GAAMD,EAClB,MAAMnB,EAAQoB,EAAKC,YAAYrB,OAASoB,EAAKE,OAAOC,KACpD,OACEX,EAAAA,cAAA,OAAKY,IAAKJ,EAAKE,OAAOC,MACpBX,EAAAA,cAAA,MACEa,MAAO,CACLC,cAAcC,EAAAA,EAAAA,IAAO,EAAI,KAG3Bf,EAAAA,cAACgB,EAAAA,KAAI,CAACH,MAAO,CAAEI,UAAW,QAAUC,GAAIV,EAAKE,OAAOC,MACjDvB,IAGLY,EAAAA,cAAA,aAAQQ,EAAKC,YAAYU,MACzBnB,EAAAA,cAAA,KAAGoB,wBAAyB,CAAEC,OAAQb,EAAKc,cAIjDtB,EAAAA,cAAA,MACEa,MAAO,CACLU,QAAS,OACTC,SAAU,OACVC,eAAgB,gBAChBC,WAAY,SACZC,UAAW,OACXC,QAAS,KAGTjC,GACAK,EAAAA,cAACgB,EAAAA,KAAI,CAACE,GAAI,UAAUrB,IAAYgC,IAAI,QAAO,mBAI5CC,MAAMC,KAAK,CAAEC,OAAQvC,GAAY,CAACwC,EAAGC,IACpClC,EAAAA,cAAA,MACEY,IAAK,oBAAoBsB,EAAI,IAC7BrB,MAAO,CACLsB,OAAQ,IAGVnC,EAAAA,cAACgB,EAAAA,KAAI,CACHE,GAAI,UAAgB,IAANgB,EAAU,IAAMA,EAAI,IAClCrB,MAAO,CACLe,SAASb,EAAAA,EAAAA,IAAO,EAAI,GACpBqB,eAAgB,OAChBC,MAAOH,EAAI,IAAM1C,EAAc,UAAY,GAC3C8C,WAAYJ,EAAI,IAAM1C,EAAc,UAAY,KAGjD0C,EAAI,MAITtC,GACAI,EAAAA,cAACgB,EAAAA,KAAI,CAACE,GAAI,UAAUnB,IAAY8B,IAAI,QAAO,gBAOrD,EAACtD,CAAA,CA/EY,CAASyB,EAAAA,WAkFxB,W","sources":["webpack://vinkrish-personal-blog/./src/templates/blog-list.js"],"sourcesContent":["import React from 'react'\nimport { Link, graphql } from 'gatsby'\n\nimport SEO from '../components/seo'\nimport Bio from '../components/Bio'\nimport Layout from '../components/Layout'\nimport { rhythm } from '../utils/typography'\n\nclass BlogIndex extends React.Component {\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n    const posts = data.allMarkdownRemark.edges\n    const { currentPage, numPages } = this.props.pageContext\n    const isFirst = currentPage === 1\n    const isLast = currentPage === numPages\n    const prevPage = currentPage - 1 === 1 ? '1' : (currentPage - 1).toString()\n    const nextPage = (currentPage + 1).toString()\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO\n          title={siteTitle}\n          keywords={[`blog`, `vinkrish`, `Vinay Krishna`]}\n        />\n        <Bio />\n        {posts.map(({ node }) => {\n          const title = node.frontmatter.title || node.fields.slug\n          return (\n            <div key={node.fields.slug}>\n              <h3\n                style={{\n                  marginBottom: rhythm(1 / 4),\n                }}\n              >\n                <Link style={{ boxShadow: 'none' }} to={node.fields.slug}>\n                  {title}\n                </Link>\n              </h3>\n              <small>{node.frontmatter.date}</small>\n              <p dangerouslySetInnerHTML={{ __html: node.excerpt }} />\n            </div>\n          )\n        })}\n        <ul\n          style={{\n            display: 'flex',\n            flexWrap: 'wrap',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            listStyle: 'none',\n            padding: 0,\n          }}\n        >\n          {!isFirst && (\n            <Link to={`/blogs/${prevPage}`} rel=\"prev\">\n              ← Previous Page\n            </Link>\n          )}\n          {Array.from({ length: numPages }, (_, i) => (\n            <li\n              key={`pagination-number${i + 1}`}\n              style={{\n                margin: 0,\n              }}\n            >\n              <Link\n                to={`/blogs/${i === 0 ? '1' : i + 1}`}\n                style={{\n                  padding: rhythm(1 / 4),\n                  textDecoration: 'none',\n                  color: i + 1 === currentPage ? '#ffffff' : '',\n                  background: i + 1 === currentPage ? '#007acc' : '',\n                }}\n              >\n                {i + 1}\n              </Link>\n            </li>\n          ))}\n          {!isLast && (\n            <Link to={`/blogs/${nextPage}`} rel=\"next\">\n              Next Page →\n            </Link>\n          )}\n        </ul>\n      </Layout>\n    )\n  }\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query blogPageQuery($skip: Int!, $limit: Int!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"DD MMMM, YYYY\")\n            title\n          }\n        }\n      }\n    }\n  }\n`"],"names":["BlogIndex","_React$Component","apply","arguments","_inheritsLoose","prototype","render","data","this","props","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","currentPage","numPages","pageContext","isFirst","isLast","prevPage","toString","nextPage","React","Layout","location","SEO","keywords","Bio","map","_ref","node","frontmatter","fields","slug","key","style","marginBottom","rhythm","Link","boxShadow","to","date","dangerouslySetInnerHTML","__html","excerpt","display","flexWrap","justifyContent","alignItems","listStyle","padding","rel","Array","from","length","_","i","margin","textDecoration","color","background"],"sourceRoot":""}